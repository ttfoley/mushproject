# Sample configuration for the ESP32 Fruiting Chamber Microcontroller
# File: control/config/microcontrollers/esp32_fruiting_chamber.yaml
# Conforms to the MicrocontrollerConfig Pydantic model

# --- Sensor Definitions ---
dht_sensors:
  - sensor_model: "DHT22"   # Specify the sensor model
    pin: 27                # Example GPIO pin the sensor is connected to
    point_uuids:
      temperature: "temp-sensor-1-uuid" # Maps the reading to the UUID in system_definition.yaml
      # ASSUMPTION: DHT22 also provides humidity. Need a corresponding humidity point UUID 
      # (e.g., "humid-sensor-1-uuid") defined in system_definition.yaml and added 
      # to this component's 'points_provided' list in the SSOT.
      humidity: "humid-sensor-1-uuid" 

# --- Output Definitions ---
digital_outputs:
  - pin: 26                     # Example GPIO pin controlling the heater relay
    name: "HeaterRelay"         # Optional logical name for local readability/debug
    # Point UUID the Microcontroller LISTENS ON for commands ('on'/'off') from the Driver.
    point_uuid: "heater-actuator-cmd-uuid" 
    initial_state: "off"        # Default physical state on boot (lowercase standard)
    # NOTE: The Microcontroller firmware is responsible for publishing the actual status
    # ('on'/'off'/'unknown') to the corresponding readback Point UUID defined in its
    # 'points_provided' list in system_definition.yaml (i.e., "heater-status-uuid").
    # This config links the command UUID to the physical pin.

# --- Bus Configuration (Examples - uncomment and populate if used) ---
# i2c: 
#   sda_pin: 21
#   scl_pin: 22
# i2c_devices: 
#   - sensor_model: "SCD41" 
#     address: 0x62
#     point_uuids:
#       temperature: "co2-sensor-temp-uuid"
#       humidity: "co2-sensor-humid-uuid"
#       co2: "co2-sensor-co2-uuid"

# onewire: 
#   pin: 32 
# onewire_devices: 
#   - sensor_model: "DS18B20"
#     point_uuid: "water-temp-uuid"

# --- Timing Parameters ---
publish_frequency_ms: 15000 # Publish sensor data every 15 seconds
output_republish_frequency_ms: 60000 # Republish output status every 60 seconds