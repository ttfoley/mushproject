# system_definition.yaml (Driver Definitions Corrected & Granular)
# All Point UUIDs are UUIDv4s.
# Driver components are now specific to their function.
# Placeholders for non-temperature driver config files remain.

# --- System Wide Configuration ---
mqtt_broker:
  host: "mqtt.local"
  port: 1883
command_hierarchy:
  - "Manual_HOA"
  - "Watchdog" # Assuming Watchdog > Governor if present
  - "Governor"

# --- Master Point Definitions ---
points:
  # == Microcontroller C1 Sensors ==
  - uuid: "f47ac10b-58cc-4372-a567-0e02b2c3d479" 
    name: "C1_SHT0_Temperature"
    description: "Sensor reading from C1/sht_0"
    value_type: CONTINUOUS
    units: "degF" 
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    validation_rules: { min_value: 0.0, max_value: 100.0 } 
    initial_value: null
  - uuid: "9c8b1da3-1b2a-4c8e-9d1f-6a7b8c9d0e1f" 
    name: "C1_SHT0_Humidity"
    description: "Sensor reading from C1/sht_0"
    value_type: CONTINUOUS
    units: "percent_rh" 
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    validation_rules: { min_value: 0.0, max_value: 100.0 }
    initial_value: null
  - uuid: "2a3b4c5d-6e7f-4a1b-8c2d-3e4f5a6b7c8d" 
    name: "C1_DHT0_Temperature"
    description: "Sensor reading from C1/dht_0"
    value_type: CONTINUOUS
    units: "degF" 
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    validation_rules: { min_value: 0.0, max_value: 100.0 } 
    initial_value: null
  - uuid: "b1c2d3e4-f5a6-4b7c-8d9e-0f1a2b3c4d5e" 
    name: "C1_DHT0_Humidity"
    description: "Sensor reading from C1/dht_0"
    value_type: CONTINUOUS
    units: "percent_rh" 
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    validation_rules: { min_value: 0.0, max_value: 100.0 }
    initial_value: null
  - uuid: "c2d3e4f5-a6b7-4c8d-9e0f-1a2b3c4d5e6f" 
    name: "C1_BME280_1_Temperature"
    description: "Temperature reading from BME280_1 on C1."
    value_type: CONTINUOUS
    units: "degF"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    validation_rules: { min_value: -40.0, max_value: 185.0 } 
    initial_value: null
  - uuid: "d3e4f5a6-b7c8-4d9e-0f1a-2b3c4d5e6f70" 
    name: "C1_BME280_1_Humidity"
    description: "Humidity reading from BME280_1 on C1."
    value_type: CONTINUOUS
    units: "percent_rh"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    validation_rules: { min_value: 0.0, max_value: 100.0 }
    initial_value: null
  - uuid: "e4f5a6b7-c8d9-4e0f-1a2b-3c4d5e6f7081" 
    name: "C1_BME280_1_Pressure"
    description: "Pressure reading from BME280_1 on C1."
    value_type: CONTINUOUS
    units: "pascal"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    validation_rules: { min_value: 30000.0, max_value: 110000.0 } 
    initial_value: null
  - uuid: "f5a6b7c8-d9e0-4f1a-2b3c-4d5e6f708192" 
    name: "C1_DS18B20_0_Temperature"
    description: "Temperature reading from DS18B20_0 on C1."
    value_type: CONTINUOUS
    units: "degF"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    validation_rules: { min_value: 0.0, max_value: 200.0 } 
    initial_value: null
  - uuid: "06b7c8d9-e0f1-4a2b-3c4d-5e6f708192a3" 
    name: "C1_DS18B20_1_Temperature"
    description: "Temperature reading from DS18B20_1 on C1."
    value_type: CONTINUOUS
    units: "degF"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    validation_rules: { min_value: 0.0, max_value: 200.0 } 
    initial_value: null
  - uuid: "17c8d9e0-f1a2-4b3c-4d5e-6f708192a3b4" 
    name: "C1_Status_WifiUptime"
    description: "WiFi connection uptime for C1."
    value_type: CONTINUOUS
    units: "minutes" 
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    validation_rules: { min_value: 0.0 }
    initial_value: null
  - uuid: "28d9e0f1-a2b3-4c4d-5e6f-708192a3b4c5" 
    name: "C1_Status_LastRestartReason"
    description: "Last restart reason for C1."
    value_type: DISCRETE
    units: "reason_code" 
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    validation_rules: { allowed_values: ["unknown", "power_on", "wifi_timeout", "mqtt_timeout", "sensor_timeout", "manual_reset", "other"] }
    initial_value: "unknown"

  # == Microcontroller C2 Sensors ==
  - uuid: "39e0f1a2-b3c4-4d5e-6f70-8192a3b4c5d6" 
    name: "C2_Status_WifiUptime"
    description: "Sensor reading from C2/status"
    value_type: CONTINUOUS
    units: "minutes" 
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    validation_rules: { min_value: 0.0, max_value: 1000000.0 } 
    initial_value: null
  - uuid: "4a0f1a2b-3c4d-4e6f-7081-92a3b4c5d6e7" 
    name: "C2_Status_LastRestartReason"
    description: "Last restart reason for C2."
    value_type: DISCRETE
    units: "reason_code" 
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    validation_rules: { allowed_values: ["unknown", "power_on", "wifi_timeout", "mqtt_timeout", "sensor_timeout", "manual_reset", "other"] }
    initial_value: "unknown"

  # == Microcontroller C2 Control Points (Humidifier - CP_25) ==
  - uuid: "5b10f1a2-b3c4-4d5e-6f70-8192a3b4c5d6" 
    name: "C2_CP25_Humidifier_Status"
    description: "Humidifier status readback"
    value_type: DISCRETE
    units: "on/off"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    command_point_uuid: "6c21f1a2-b3c4-4d5e-6f70-8192a3b4c5d7" 
    validation_rules: { allowed_values: ["unknown", "on", "off"] } 
    initial_value: "off" 
  - uuid: "6c21f1a2-b3c4-4d5e-6f70-8192a3b4c5d7" 
    name: "C2_CP25_Humidifier_Command"
    description: "Humidifier command"
    value_type: DISCRETE
    units: "on/off"
    data_source_layer: driver 
    access: READ_WRITE
    writable_by: ["humidity_driver_fruiting"] 
    persist_to_db: true 
    status_point_uuid: "5b10f1a2-b3c4-4d5e-6f70-8192a3b4c5d6" 
    validation_rules: { allowed_values: ["on", "off"] } 
    initial_value: "off" 

  # == Microcontroller C2 Control Points (HeatingPad - CP_26) ==
  - uuid: "7d32f1a2-b3c4-4d5e-6f70-8192a3b4c5d8" 
    name: "C2_CP26_HeatingPad_Status"
    description: "HeatingPad status readback"
    value_type: DISCRETE
    units: "on/off"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    command_point_uuid: "8e43f1a2-b3c4-4d5e-6f70-8192a3b4c5d9" 
    validation_rules: { allowed_values: ["unknown", "on", "off"] }
    initial_value: "off" 
  - uuid: "8e43f1a2-b3c4-4d5e-6f70-8192a3b4c5d9" 
    name: "C2_CP26_HeatingPad_Command"
    description: "HeatingPad command"
    value_type: DISCRETE
    units: "on/off"
    data_source_layer: driver
    access: READ_WRITE
    writable_by: ["temperature_driver_fruiting"] 
    persist_to_db: true 
    status_point_uuid: "7d32f1a2-b3c4-4d5e-6f70-8192a3b4c5d8" 
    validation_rules: { allowed_values: ["on", "off"] }
    initial_value: "off" 

  # == Microcontroller C2 Control Points (Light - CP_32) ==
  - uuid: "9f54f1a2-b3c4-4d5e-6f70-8192a3b4c5da" 
    name: "C2_CP32_Light_Status"
    description: "Light status readback"
    value_type: DISCRETE
    units: "on/off"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    command_point_uuid: "a065f1a2-b3c4-4d5e-6f70-8192a3b4c5db" 
    validation_rules: { allowed_values: ["unknown", "on", "off"] }
    initial_value: "off" 
  - uuid: "a065f1a2-b3c4-4d5e-6f70-8192a3b4c5db" 
    name: "C2_CP32_Light_Command"
    description: "Light command"
    value_type: DISCRETE
    units: "on/off"
    data_source_layer: driver
    access: READ_WRITE
    writable_by: ["light_driver_fruiting"] 
    persist_to_db: true 
    status_point_uuid: "9f54f1a2-b3c4-4d5e-6f70-8192a3b4c5da" 
    validation_rules: { allowed_values: ["on", "off"] }
    initial_value: "off" 

  # == Microcontroller C2 Control Points (VentFan - CP_33) ==
  - uuid: "b176f1a2-b3c4-4d5e-6f70-8192a3b4c5dc" 
    name: "C2_CP33_VentFan_Status"
    description: "VentFan status readback"
    value_type: DISCRETE
    units: "on/off"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    command_point_uuid: "c287f1a2-b3c4-4d5e-6f70-8192a3b4c5dd" 
    validation_rules: { allowed_values: ["unknown", "on", "off"] }
    initial_value: "off" 
  - uuid: "c287f1a2-b3c4-4d5e-6f70-8192a3b4c5dd" 
    name: "C2_CP33_VentFan_Command"
    description: "VentFan command"
    value_type: DISCRETE
    units: "on/off"
    data_source_layer: driver
    access: READ_WRITE
    writable_by: ["vent_driver_fruiting"] 
    persist_to_db: true 
    status_point_uuid: "b176f1a2-b3c4-4d5e-6f70-8192a3b4c5dc" 
    validation_rules: { allowed_values: ["on", "off"] }
    initial_value: "off" 

  # == Microcontroller C2 Control Points (Status_LED - led1) ==
  - uuid: "d398f1a2-b3c4-4d5e-6f70-8192a3b4c5de" 
    name: "C2_LED1_StatusLED_Status"
    description: "Status_LED status readback"
    value_type: DISCRETE
    units: "on/off"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    command_point_uuid: "e4a9f1a2-b3c4-4d5e-6f70-8192a3b4c5df" 
    validation_rules: { allowed_values: ["unknown", "on", "off"] }
    initial_value: "off" 
  - uuid: "e4a9f1a2-b3c4-4d5e-6f70-8192a3b4c5df" 
    name: "C2_LED1_StatusLED_Command"
    description: "Status_LED command"
    value_type: DISCRETE
    units: "on/off"
    data_source_layer: driver 
    access: READ_WRITE
    writable_by: ["led_driver_status"] 
    persist_to_db: true 
    status_point_uuid: "d398f1a2-b3c4-4d5e-6f70-8192a3b4c5de" 
    validation_rules: { allowed_values: ["on", "off"] }
    initial_value: "off" 

  # == Microcontroller C3 Sensors (SCD4x) ==
  - uuid: "f5baf1a2-b3c4-4d5e-6f70-8192a3b4c5e0" 
    name: "C3_SCD4x_CO2"
    description: "CO2 reading from SCD4x on C3."
    value_type: CONTINUOUS
    units: "ppm"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    validation_rules: { min_value: 0.0, max_value: 20000.0 } 
    initial_value: null
  - uuid: "06cbf1a2-b3c4-4d5e-6f70-8192a3b4c5e1" 
    name: "C3_SCD4x_Temperature"
    description: "Temperature reading from SCD4x on C3."
    value_type: CONTINUOUS
    units: "degF"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    validation_rules: { min_value: -40.0, max_value: 185.0 } 
    initial_value: null
  - uuid: "17dcf1a2-b3c4-4d5e-6f70-8192a3b4c5e2" 
    name: "C3_SCD4x_Humidity"
    description: "Humidity reading from SCD4x on C3."
    value_type: CONTINUOUS
    units: "percent_rh"
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    validation_rules: { min_value: 0.0, max_value: 100.0 }
    initial_value: null
  - uuid: "28eef1a2-b3c4-4d5e-6f70-8192a3b4c5e3" 
    name: "C3_Status_WifiUptime"
    description: "WiFi connection uptime for C3."
    value_type: CONTINUOUS
    units: "minutes" 
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    validation_rules: { min_value: 0.0 }
    initial_value: null
  - uuid: "39fff1a2-b3c4-4d5e-6f70-8192a3b4c5e4" 
    name: "C3_Status_LastRestartReason"
    description: "Last restart reason for C3."
    value_type: DISCRETE
    units: "reason_code" 
    data_source_layer: microcontroller
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    validation_rules: { allowed_values: ["unknown", "power_on", "wifi_timeout", "mqtt_timeout", "sensor_timeout", "manual_reset", "other"] }
    initial_value: "unknown"

  # == Governor Setpoints / Commands (Inputs to Governor or Driver) ==
  - uuid: "4a00f1a2-b3c4-4d5e-6f70-8192a3b4c5e5" 
    name: "FruitingChamber_Temp_Target_Setpoint"
    description: "Target temperature setpoint for the controller (e.g., Governor)."
    value_type: CONTINUOUS
    units: "degF" 
    data_source_layer: manual_input 
    access: READ_WRITE
    writable_by: ["Manual_HOA"] 
    persist_to_db: true
    validation_rules: { min_value: 0.0, max_value: 100.0 } 
    initial_value: 70.0 
  - uuid: "5b11f1a2-b3c4-4d5e-6f70-8192a3b4c5e6" 
    name: "FruitingChamber_Temp_Target_Deadband"
    description: "Deadband (+/- value around setpoint) or total hysteresis width for bang-bang control."
    value_type: CONTINUOUS
    units: "delta_degF" 
    data_source_layer: manual_input 
    access: READ_WRITE
    writable_by: ["Manual_HOA"] 
    persist_to_db: true
    validation_rules: { min_value: 0.0, max_value: 10.0 } 
    initial_value: 2.0 
  - uuid: "6c22f1a2-b3c4-4d5e-6f70-8192a3b4c5e7" 
    name: "FruitingChamber_Heater_Governor_Mode_Command"
    description: "Desired operating mode from the Governor for the Heater Driver FSM (e.g., pwm, off, on)."
    value_type: DISCRETE
    units: "mode_command" 
    data_source_layer: governor 
    access: READ_WRITE
    writable_by: ["temperature_governor"] 
    persist_to_db: true
    initial_value: "off" 
    validation_rules: { allowed_values: ["pwm", "off", "on"] } 
  - uuid: "7d33f1a2-b3c4-4d5e-6f70-8192a3b4c5e8" 
    name: "FruitingChamber_Heater_Manual_Command"
    description: "Desired operating mode from Manual/HOA input for the Heater Driver FSM (e.g., on, off)."
    value_type: DISCRETE
    units: "mode_command" 
    data_source_layer: manual_input 
    access: READ_WRITE
    writable_by: ["Manual_HOA"] 
    persist_to_db: true
    initial_value: "off" 
    validation_rules: { allowed_values: ["on", "off"] } 
  - uuid: "8e44f1a2-b3c4-4d5e-6f70-8192a3b4c5e9" 
    name: "FruitingChamber_Heater_PWM_Setpoint"
    description: "Target PWM duty cycle (0.0 to 1.0) set by Gov/Manual, read by Driver for PWM logic."
    value_type: CONTINUOUS
    units: "ratio"
    data_source_layer: governor 
    access: READ_WRITE
    writable_by: ["temperature_governor", "Manual_HOA"] 
    persist_to_db: true
    validation_rules: { min_value: 0.0, max_value: 1.0 }
    initial_value: 0.0
  - uuid: "9f55f1a2-b3c4-4d5e-6f70-8192a3b4c5ea" 
    name: "FruitingChamber_Heater_PWM_ON_Duration_Setpoint"
    description: "Target ON duration (seconds) for PWM cycle, published by Governor, read by Driver's FSM."
    value_type: CONTINUOUS
    units: "seconds"
    data_source_layer: governor
    access: READ_WRITE
    writable_by: ["temperature_governor"] 
    persist_to_db: true 
    validation_rules: { min_value: 0.0 }
    initial_value: 0.0
  - uuid: "a066f1a2-b3c4-4d5e-6f70-8192a3b4c5eb" 
    name: "FruitingChamber_Heater_PWM_OFF_Duration_Setpoint"
    description: "Target OFF duration (seconds) for PWM cycle, published by Governor, read by Driver's FSM."
    value_type: CONTINUOUS
    units: "seconds"
    data_source_layer: governor
    access: READ_WRITE
    writable_by: ["temperature_governor"] 
    persist_to_db: true 
    validation_rules: { min_value: 0.0 }
    initial_value: 60.0

  # == Humidity Governor Setpoints / Commands (Inputs to Humidity Governor or Driver) ==
  - uuid: "16cc030a-27f6-4d46-83c2-e60ec5b84e02"
    name: "FruitingChamber_Humidity_Governor_Mode_Command"
    description: "Desired operating mode from the Governor for the Humidity Driver FSM (e.g., off, on)."
    value_type: DISCRETE
    units: "mode_command"
    data_source_layer: governor
    access: READ_WRITE
    writable_by: ["humidity_governor"] # Assuming you'll have a component named 'humidity_governor'
    persist_to_db: true
    initial_value: "off"
    validation_rules: { allowed_values: ["off", "on"] }
  # == Humidity Governor Setpoints / Commands (Inputs to Governor or Driver) ==
  - uuid: "1ccbdc0e-30cd-4b02-964f-fd5208821bee"
    name: "FruitingChamber_Humidity_Target_Setpoint"
    description: "Target humidity setpoint for the controller (e.g., Humidity Governor)."
    value_type: CONTINUOUS
    units: "percent_rh" # Units for relative humidity
    data_source_layer: manual_input # Or scheduler, UI etc.
    access: READ_WRITE
    writable_by: ["Manual_HOA", "humidity_governor"] # Added humidity_governor as a potential writer
    persist_to_db: true
    validation_rules: { min_value: 0.0, max_value: 100.0 } # Standard RH range
    initial_value: 85.0 # Example initial humidity setpoint
  - uuid: "e13a213e-d936-44ab-9948-895c335026b0"
    name: "FruitingChamber_Humidity_Target_Deadband"
    description: "Deadband (+/- value around setpoint) or total hysteresis width for humidity bang-bang control."
    value_type: CONTINUOUS
    units: "delta_percent_rh" # Represents a humidity difference
    data_source_layer: manual_input # Or scheduler, UI etc.
    access: READ_WRITE
    writable_by: ["Manual_HOA", "humidity_governor"] # Added humidity_governor as a potential writer
    persist_to_db: true
    validation_rules: { min_value: 0.0, max_value: 20.0 } # Example range for RH deadband, must be non-negative
    initial_value: 5.0 # Example initial humidity deadband
  # == Vent Fan Governor Mode Command Point ==
  - uuid: "c263c3fc-018d-4996-800a-5317465c7178"
    name: "FruitingChamber_VentFan_Governor_Mode_Command"
    description: "Desired operating mode from the Governor for the Vent Fan Driver FSM (e.g., off, on)."
    value_type: DISCRETE
    units: "mode_command"
    data_source_layer: governor
    access: READ_WRITE
    writable_by: ["vent_fan_governor"] # Placeholder for the vent fan governor component ID
    persist_to_db: true
    initial_value: "off"
    validation_rules: { allowed_values: ["off", "on"] } # Assuming simple on/off for now
    
  # == Light Governor Mode Command Point ==
  - uuid: "7bbe9f99-a3b3-4e97-a10a-d3c4f92c838d"
    name: "FruitingChamber_Light_Governor_Mode_Command"
    description: "Desired operating mode from the Governor for the Light Driver FSM (e.g., off, on)."
    value_type: DISCRETE
    units: "mode_command"
    data_source_layer: governor
    access: READ_WRITE
    writable_by: ["light_governor"] # Placeholder for the light governor component ID
    persist_to_db: true
    initial_value: "off"
    validation_rules: { allowed_values: ["off", "on"] } # Assuming simple on/off for now
  # == Driver Internal State Points ==
  #temperature driver
  - uuid: "b177f1a2-b3c4-4d5e-6f70-8192a3b4c5ec" 
    name: "TempDriver_TimeInState" 
    description: "Time elapsed (seconds) since the temperature driver's FSM internally changed state."
    value_type: CONTINUOUS
    units: "seconds"
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    initial_value: 0.0
  - uuid: "c288f1a2-b3c4-4d5e-6f70-8192a3b4c5ed" 
    name: "TempDriver_FSM_State" 
    description: "Current internal state name of the temperature driver FSM."
    value_type: DISCRETE
    units: "state_name" 
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    initial_value: "unknown"
  - uuid: "d399f1a2-b3c4-4d5e-6f70-8192a3b4c5ee" 
    name: "TempDriver_FSM_Health" 
    description: "Confirmation status for the temperature driver."
    value_type: DISCRETE
    units: "health_status" 
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true 
    initial_value: "unknown" 
    validation_rules: { allowed_values: ["pending", "verified", "fault", "unknown"] } 

  - uuid: "274979de-89e2-496e-a751-5c7faa61928c" # UUID for HumidityDriver_TimeInState
    name: "HumidityDriver_TimeInState"
    description: "Time elapsed (seconds) since the humidity driver's FSM internally changed state."
    value_type: CONTINUOUS
    units: "seconds"
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    initial_value: 0.0
  - uuid: "b8016f02-56d4-449c-baf6-7602ef845fb7" # UUID for HumidityDriver_FSM_State
    name: "HumidityDriver_FSM_State"
    description: "Current internal state name of the humidity driver FSM."
    value_type: DISCRETE
    units: "state_name"
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    initial_value: "off" # Or "off" if you prefer to initialize to a known safe state
                             # and your FSM logic handles this.
                             # The 'lockout' state also needs to be in allowed_values if it's a possible reported state.
    validation_rules: { allowed_values: ["off", "on", "lockout", "unknown"] }
  - uuid: "41f6a24c-e22a-495c-9dde-5eb92b9c9926" # UUID for HumidityDriver_FSM_Health
    name: "HumidityDriver_FSM_Health"
    description: "Confirmation status for the humidity driver."
    value_type: DISCRETE
    units: "health_status"
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    initial_value: "unknown"
    validation_rules: { allowed_values: ["pending", "verified", "fault", "unknown"] }

  # == Vent Fan Driver Internal FSM Points ==
  - uuid: "37b0558a-a39e-4a3f-9cdc-ad83e0b5c3f9"
    name: "VentFanDriver_TimeInState"
    description: "Time elapsed (seconds) since the vent fan driver's FSM internally changed state."
    value_type: CONTINUOUS
    units: "seconds"
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    initial_value: 0.0
  - uuid: "2eaa72d4-5b0e-46db-b5ee-8428726cd400"
    name: "VentFanDriver_FSM_State"
    description: "Current internal state name of the vent fan driver FSM."
    value_type: DISCRETE
    units: "state_name"
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    initial_value: "off" # Assuming 'off' is the default and a defined state
    validation_rules: { allowed_values: ["off", "on", "unknown"] } # Add other states like 'lockout' if needed
  - uuid: "0c31a004-741f-4f8a-b2fd-3ceb37cdde8e"
    name: "VentFanDriver_FSM_Health"
    description: "Confirmation status for the vent fan driver."
    value_type: DISCRETE
    units: "health_status"
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    initial_value: "unknown"
    validation_rules: { allowed_values: ["pending", "verified", "fault", "unknown"] }

  # == Light Driver Internal FSM Points ==
  - uuid: "b6879dfc-c2eb-42e1-a479-5cffd07da6c0"
    name: "LightDriver_TimeInState"
    description: "Time elapsed (seconds) since the light driver's FSM internally changed state."
    value_type: CONTINUOUS
    units: "seconds"
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    initial_value: 0.0
  - uuid: "a30be0ec-54d5-4ccd-ad12-0a8482e61a54"
    name: "LightDriver_FSM_State"
    description: "Current internal state name of the light driver FSM."
    value_type: DISCRETE
    units: "state_name"
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    initial_value: "off" # Assuming 'off' is the default and a defined state
    validation_rules: { allowed_values: ["off", "on", "unknown"] } # Add other states if needed
  - uuid: "9f1f19ad-ef0c-42bc-b6fe-9359b331e807"
    name: "LightDriver_FSM_Health"
    description: "Confirmation status for the light driver."
    value_type: DISCRETE
    units: "health_status"
    data_source_layer: driver
    access: READ_ONLY
    writable_by: []
    persist_to_db: true
    initial_value: "unknown"
    validation_rules: { allowed_values: ["pending", "verified", "fault", "unknown"] }
  # Add similar FSM state/health/time points for other drivers (humidity, light, etc.) if they have FSMs


# --- Component Instance Definitions ---
components:
  # Microcontrollers
  - id: "c1"
    type: microcontroller
    config_file: "config/microcontrollers/c1_config.yaml"
    points_provided: 
      - "f47ac10b-58cc-4372-a567-0e02b2c3d479" # C1_SHT0_Temperature
      - "9c8b1da3-1b2a-4c8e-9d1f-6a7b8c9d0e1f" # C1_SHT0_Humidity
      - "2a3b4c5d-6e7f-4a1b-8c2d-3e4f5a6b7c8d" # C1_DHT0_Temperature
      - "b1c2d3e4-f5a6-4b7c-8d9e-0f1a2b3c4d5e" # C1_DHT0_Humidity
      - "c2d3e4f5-a6b7-4c8d-9e0f-1a2b3c4d5e6f" # C1_BME280_1_Temperature
      - "d3e4f5a6-b7c8-4d9e-0f1a-2b3c4d5e6f70" # C1_BME280_1_Humidity
      - "e4f5a6b7-c8d9-4e0f-1a2b-3c4d5e6f7081" # C1_BME280_1_Pressure
      - "f5a6b7c8-d9e0-4f1a-2b3c-4d5e6f708192" # C1_DS18B20_0_Temperature
      - "06b7c8d9-e0f1-4a2b-3c4d-5e6f708192a3" # C1_DS18B20_1_Temperature
      - "17c8d9e0-f1a2-4b3c-4d5e-6f708192a3b4" # C1_Status_WifiUptime
      - "28d9e0f1-a2b3-4c4d-5e6f-708192a3b4c5" # C1_Status_LastRestartReason
  - id: "c2"
    type: microcontroller
    config_file: "config/microcontrollers/c2_config.yaml"
    points_provided: 
      - "39e0f1a2-b3c4-4d5e-6f70-8192a3b4c5d6" # C2_Status_WifiUptime
      - "4a0f1a2b-3c4d-4e6f-7081-92a3b4c5d6e7" # C2_Status_LastRestartReason
      - "5b10f1a2-b3c4-4d5e-6f70-8192a3b4c5d6" # C2_CP25_Humidifier_Status
      - "7d32f1a2-b3c4-4d5e-6f70-8192a3b4c5d8" # C2_CP26_HeatingPad_Status
      - "9f54f1a2-b3c4-4d5e-6f70-8192a3b4c5da" # C2_CP32_Light_Status
      - "b176f1a2-b3c4-4d5e-6f70-8192a3b4c5dc" # C2_CP33_VentFan_Status
      - "d398f1a2-b3c4-4d5e-6f70-8192a3b4c5de" # C2_LED1_StatusLED_Status
  - id: "c3"
    type: microcontroller
    config_file: "config/microcontrollers/c3_config.yaml"
    points_provided: 
      - "f5baf1a2-b3c4-4d5e-6f70-8192a3b4c5e0" # C3_SCD4x_CO2
      - "06cbf1a2-b3c4-4d5e-6f70-8192a3b4c5e1" # C3_SCD4x_Temperature
      - "17dcf1a2-b3c4-4d5e-6f70-8192a3b4c5e2" # C3_SCD4x_Humidity
      - "28eef1a2-b3c4-4d5e-6f70-8192a3b4c5e3" # C3_Status_WifiUptime
      - "39fff1a2-b3c4-4d5e-6f70-8192a3b4c5e4" # C3_Status_LastRestartReason

  # Drivers
  - id: "temperature_driver_fruiting" 
    type: driver
    config_file: "config/drivers/temperature_driver_fruiting.yaml" 
    controls_microcontroller: "c2" 
    virtual_points_provided: 
      - "b177f1a2-b3c4-4d5e-6f70-8192a3b4c5ec" # TempDriver_TimeInState
      - "c288f1a2-b3c4-4d5e-6f70-8192a3b4c5ed" # TempDriver_FSM_State
      - "d399f1a2-b3c4-4d5e-6f70-8192a3b4c5ee" # TempDriver_FSM_Health
      - "8e43f1a2-b3c4-4d5e-6f70-8192a3b4c5d9" # C2_CP26_HeatingPad_Command
  
  - id: "humidity_driver_fruiting" 
    type: driver
    config_file: "config/drivers/humidity_driver_fruiting.yaml" 
    controls_microcontroller: "c2"
    virtual_points_provided:
      - "6c21f1a2-b3c4-4d5e-6f70-8192a3b4c5d7" # C2_CP25_Humidifier_Command
      - "274979de-89e2-496e-a751-5c7faa61928c" # HumidityDriver_TimeInState
      - "b8016f02-56d4-449c-baf6-7602ef845fb7" # HumidityDriver_FSM_State
      - "41f6a24c-e22a-495c-9dde-5eb92b9c9926" # HumidityDriver_FSM_Health  
      # TODO: Add FSM points for humidity driver if it has its own FSM: state, health, time_in_state

  - id: "light_driver_fruiting" 
    type: driver
    config_file: "config/drivers/light_driver_fruiting.yaml" 
    controls_microcontroller: "c2"
    virtual_points_provided:
      - "a065f1a2-b3c4-4d5e-6f70-8192a3b4c5db" # C2_CP32_Light_Command
      - "b6879dfc-c2eb-42e1-a479-5cffd07da6c0" # LightDriver_TimeInState
      - "a30be0ec-54d5-4ccd-ad12-0a8482e61a54" # LightDriver_FSM_State
      - "9f1f19ad-ef0c-42bc-b6fe-9359b331e807" # LightDriver_FSM_Health
      # TODO: Add FSM points for light driver if it has its own FSM

  - id: "vent_driver_fruiting" 
    type: driver
    config_file: "config/drivers/vent_driver_fruiting.yaml" 
    controls_microcontroller: "c2"
    virtual_points_provided:
      - "c287f1a2-b3c4-4d5e-6f70-8192a3b4c5dd" # C2_CP33_VentFan_Command
      - "37b0558a-a39e-4a3f-9cdc-ad83e0b5c3f9" # VentFanDriver_TimeInState
      - "2eaa72d4-5b0e-46db-b5ee-8428726cd400" # VentFanDriver_FSM_State
      - "0c31a004-741f-4f8a-b2fd-3ceb37cdde8e" # VentFanDriver_FSM_Health
      # TODO: Add FSM points for vent driver if it has its own FSM

  # - id: "led_driver_status" 
  #   type: driver
  #   config_file: "config/drivers/led_driver_status.yaml" 
  #   controls_microcontroller: "c2"
  #   virtual_points_provided:
  #     - "e4a9f1a2-b3c4-4d5e-6f70-8192a3b4c5df" # C2_LED1_StatusLED_Command
  #     # TODO: Add FSM points for LED driver if it has its own FSM
      
  # Governor
  - id: "temperature_governor" 
    type: governor
    config_file: "config/governors/temperature_governor.yaml" 
    controls_drivers:
      - "temperature_driver_fruiting" 
    virtual_points_provided: 
      - "6c22f1a2-b3c4-4d5e-6f70-8192a3b4c5e7" # FruitingChamber_Heater_Governor_Mode_Command
      - "8e44f1a2-b3c4-4d5e-6f70-8192a3b4c5e9" # FruitingChamber_Heater_PWM_Setpoint
      - "9f55f1a2-b3c4-4d5e-6f70-8192a3b4c5ea" # FruitingChamber_Heater_PWM_ON_Duration_Setpoint
      - "a066f1a2-b3c4-4d5e-6f70-8192a3b4c5eb" # FruitingChamber_Heater_PWM_OFF_Duration_Setpoint

  - id: "humidity_governor" 
    type: governor
    config_file: "config/governors/humidity_governor.yaml" 
    controls_drivers:
      - "humidity_driver_fruiting" 
    virtual_points_provided:
      - "16cc030a-27f6-4d46-83c2-e60ec5b84e02" # FruitingChamber_Humidity_Governor_Mode_Command


  # - id: "light_governor" 
  #   type: governor
  #   config_file: "config/governors/light_governor.yaml" 
  #   controls_drivers:
  #     - "light_driver_fruiting"     
  #   virtual_points_provided:
  #     - "7bbe9f99-a3b3-4e97-a10a-d3c4f92c838d" # FruitingChamber_Light_Governor_Mode_Command

  # - id: "vent_governor" 
  #   type: governor
  #   config_file: "config/governors/vent_governor.yaml" 
  #   controls_drivers:
  #     - "vent_driver_fruiting" 
  #   virtual_points_provided:
  #     - "c263c3fc-018d-4996-800a-5317465c7178" # FruitingChamber_VentFan_Governor_Mode_Command

