// autogen_config.h
// Auto-generated configuration header for microcontroller: c1
// Generated by build.py from system_definition.yaml and c1_config.yaml

#ifndef AUTOGEN_CONFIG_H
#define AUTOGEN_CONFIG_H

// === Device Identification ===
#define DEVICE_ID "c1"
#define DEVICE_DESCRIPTION "Sensor controller for fruiting chamber"
#define WIFI_SSID "ThomassenCondo_EXT"
#define WIFI_PASSWORD "OceanBreeze"
#define MQTT_BROKER_ADDRESS "192.168.1.17"
#define MQTT_BROKER_PORT 1883
#define MQTT_USERNAME "ttfoley"
#define MQTT_PASSWORD "password"
#define MQTT_CLIENT_ID "controller1"

// === Global Settings ===
#define NTP_SERVER_ADDRESS "us.pool.ntp.org"
#define NTP_UTC_OFFSET_SECONDS 0
#define NTP_UPDATE_INTERVAL_MS 3600000
#define DEBUG_I2C_SCAN_ON_STARTUP true  // Set to false for production builds

// === Timing Constants ===
#define PUBLISH_INTERVAL_MS 15000
#define WIFI_CONNECT_TIMEOUT_MS 30000
#define MQTT_CONNECT_TIMEOUT_MS 20000
#define NTP_SYNC_TIMEOUT_MS 15000
#define SENSOR_AND_STATUS_PUBLISH_INTERVAL_MS 30000
#define MAX_TIME_NO_PUBLISH_MS 300000
#define STATUS_PUBLISH_INTERVAL_MS 300000
#define MAINTENANCE_RESTART_INTERVAL_MS 604800000
#define PERIODIC_CHECKS_INTERVAL_MS 3600000

// === FSM and Connection Configuration ===
#define MAX_WIFI_ATTEMPTS 10
#define WIFI_ATTEMPT_TIMEOUT_MS 20000
#define MAX_NTP_ATTEMPTS 5
#define NTP_ATTEMPT_TIMEOUT_MS 30000
#define MQTT_CONNECT_RETRY_INTERVAL_MS 2000
#define NTP_LOOP_UPDATE_INTERVAL_MS 60000
#define DEBUG_QUEUE_INTERVAL_MS 30000

// === Delay and Timing Constants ===
#define MQTT_RETRY_DELAY_MS 2000
#define RESTART_DELAY_MS 1000
#define MAIN_LOOP_DELAY_MS 10

// === FSM State Definitions (ADR-17, ADR-22) ===
// Note: This enum will be used by common FSM utilities
//All states in FsmUtils.h must be defined here, even if they are not used in this controller.
typedef enum {
    SETUP_HW,           // Hardware initialization (done in setup())
    CONNECT_WIFI,           // WiFi connection
    SYNC_NTP,           // NTP synchronization
    CONNECT_MQTT,           // MQTT broker connection
    PUBLISH_BOOT_STATUS,           // Publish boot status (restart reason) - runs once after MQTT connection
    PROCESS_COMMANDS,           // Process actuator commands
    READ_SENSORS,           // Read sensor values and queue for publishing
    PUBLISH_DATA,           // Publish data from publish queue
    OPERATIONAL_PERIODIC_CHECKS,           // Periodic maintenance tasks
    WAIT,           // Idle state, check what needs to be done
    RESTART             // Restart the controller
} FsmState;

// === I2C Configuration ===
#define I2C_SDA_PIN 21
#define I2C_SCL_PIN 22

// === Sensor Configuration Structs ===
#include "sensors/SensorConfigs.h"  // Common sensor config structs (ADR-25)

// === Sensor Configuration Instances ===

// SHT85 Sensor Instance
const SHT85Config SHT85_0_CONFIG = {
    .point_name = "FruitingChamber_SHT85_0",
    .publish_interval_ms = SENSOR_AND_STATUS_PUBLISH_INTERVAL_MS,
    .main_loop_delay_ms = MAIN_LOOP_DELAY_MS,
    .max_time_no_publish_ms = MAX_TIME_NO_PUBLISH_MS,
    .address = 0x44,
    .c_to_f = true,
    .temp_topic = "mush/c1/sensors/fruitingchamber_sht85-0/degf",
    .temp_uuid = "f47ac10b-58cc-4372-a567-0e02b2c3d479",
    .humidity_topic = "mush/c1/sensors/fruitingchamber_sht85-0/percent_rh",
    .humidity_uuid = "9c8b1da3-1b2a-4c8e-9d1f-6a7b8c9d0e1f"
};

// BME280 Sensor Instance
const BME280Config BME280_1_CONFIG = {
    .point_name = "FruitingChamber_BME280_1",
    .publish_interval_ms = SENSOR_AND_STATUS_PUBLISH_INTERVAL_MS,
    .main_loop_delay_ms = MAIN_LOOP_DELAY_MS,
    .max_time_no_publish_ms = MAX_TIME_NO_PUBLISH_MS,
    .address = 0x77,
    .c_to_f = true,
    .temp_topic = "mush/c1/sensors/fruitingchamber_bme280-1/degf",
    .temp_uuid = "c2d3e4f5-a6b7-4c8d-9e0f-1a2b3c4d5e6f",
    .humidity_topic = "mush/c1/sensors/fruitingchamber_bme280-1/percent_rh",
    .humidity_uuid = "d3e4f5a6-b7c8-4d9e-0f1a-2b3c4d5e6f70",
    .pressure_topic = "mush/c1/sensors/fruitingchamber_bme280-1/pascal",
    .pressure_uuid = "e4f5a6b7-c8d9-4e0f-1a2b-3c4d5e6f7081"
};

// DHT22 Sensor Instance
const DHT22Config DHT22_0_CONFIG = {
    .point_name = "Outside_DHT22_0",
    .publish_interval_ms = SENSOR_AND_STATUS_PUBLISH_INTERVAL_MS,
    .main_loop_delay_ms = MAIN_LOOP_DELAY_MS,
    .max_time_no_publish_ms = MAX_TIME_NO_PUBLISH_MS,
    .pin = 27,
    .c_to_f = true,
    .temp_topic = "mush/c1/sensors/outside_dht-0/degf",
    .temp_uuid = "2a3b4c5d-6e7f-4a1b-8c2d-3e4f5a6b7c8d",
    .humidity_topic = "mush/c1/sensors/outside_dht-0/percent_rh",
    .humidity_uuid = "b1c2d3e4-f5a6-4b7c-8d9e-0f1a2b3c4d5e"
};

// DS18B20 Sensor Instance
const DS18B20Config DS18B20_0_CONFIG = {
    .point_name = "FruitingChamber_DS18B20_0",
    .publish_interval_ms = SENSOR_AND_STATUS_PUBLISH_INTERVAL_MS,
    .main_loop_delay_ms = MAIN_LOOP_DELAY_MS,
    .max_time_no_publish_ms = MAX_TIME_NO_PUBLISH_MS,
    .pin = 32,
    .resolution_bits = 10,              // 10-bit resolution = 0.25°C precision, 187.5ms conversion
    .c_to_f = true,
    .temp_topic = "mush/c1/sensors/fruitingchamber_ds18b20-0/degf",
    .temp_uuid = "f5a6b7c8-d9e0-4f1a-2b3c-4d5e6f708192"
};

// DS18B20 Sensor Instance
const DS18B20Config DS18B20_1_CONFIG = {
    .point_name = "FruitingChamber_DS18B20_1",
    .publish_interval_ms = SENSOR_AND_STATUS_PUBLISH_INTERVAL_MS,
    .main_loop_delay_ms = MAIN_LOOP_DELAY_MS,
    .max_time_no_publish_ms = MAX_TIME_NO_PUBLISH_MS,
    .pin = 33,
    .resolution_bits = 10,              // 10-bit resolution = 0.25°C precision, 187.5ms conversion
    .c_to_f = true,
    .temp_topic = "mush/c1/sensors/fruitingchamber_ds18b20-1/degf",
    .temp_uuid = "06b7c8d9-e0f1-4a2b-3c4d-5e6f708192a3"
};

// System Info: C1_WifiUptime
#define POINT_NAME_C1_WifiUptime "C1_WifiUptime"
#define UUID_C1_WifiUptime_DATA "17c8d9e0-f1a2-4b3c-4d5e-6f708192a3b4"
#define TOPIC_C1_WifiUptime_DATA "mush/c1/statuses/wifi_uptime"

// System Info: C1_LastRestartReason
#define POINT_NAME_C1_LastRestartReason "C1_LastRestartReason"
#define UUID_C1_LastRestartReason_DATA "28d9e0f1-a2b3-4c4d-5e6f-708192a3b4c5"
#define TOPIC_C1_LastRestartReason_DATA "mush/c1/statuses/last_restart_reason"

#endif // AUTOGEN_CONFIG_H
